version: 2.1

orbs:
  goreleaser: ory/goreleaser@0.1.38
  slack: circleci/slack@3.4.2
  sdk: ory/sdk@0.1.52
  changelog: ory/changelog@0.1.10
  nancy: ory/nancy@0.0.19
  docs: ory/docs@0.0.12
  golangci: ory/golangci@0.0.18
  go: circleci/go@1.5.0
  prettier: ory/prettier@0.0.11
  node: circleci/node@4.2.0
  shellcheck: circleci/shellcheck@2.2.4

jobs:
#  test-legacy-migrations:
#    parameters:
#      flavor:
#        type: string
#    machine:
#      image: ubuntu-1604:201903-01
#    steps:
#      - checkout
#      - run: sudo rm -rfd /usr/local/go
#      - run: sudo circleci-install golang 1.14.2
#      - run: make test-resetdb
#      - run: source scripts/test-env.sh && go test -tags legacy_migration_test -failfast -timeout=20m -run=Test*/db=<< parameters.flavor>> ./internal/fizzmigrate

  test:
    docker:
      - image: cimg/go:1.16-node
        environment:
          - TEST_DATABASE_POSTGRESQL=postgres://test:test@localhost:5432/postgres?sslmode=disable
          - TEST_DATABASE_MYSQL=mysql://root:test@(localhost:3306)/mysql?multiStatements=true&parseTime=true
          - TEST_DATABASE_COCKROACHDB=cockroach://root@localhost:26257/defaultdb?sslmode=disable
      - image: postgres:9.6
        environment:
          - POSTGRES_USER=test
          - POSTGRES_PASSWORD=test
          - POSTGRES_DB=postgres
      - image: mysql:8.0
        environment:
          - MYSQL_ROOT_PASSWORD=test
      - image: cockroachdb/cockroach:v20.2.5
        command: start-single-node --insecure
    steps:
      - checkout
      - setup_remote_docker

      - go/load-cache:
          key: ory-hydra-go-mod-v1
      - go/mod-download
      - go/save-cache:
          key: ory-hydra-go-mod-v1

      - nancy/install
      - nancy/check
      - shellcheck/install
      - shellcheck/check
      - prettier/install
      - prettier/check
      - prettier/install:
          dir: docs/
      - prettier/check:
          dir: docs/
      - goreleaser/install
      - goreleaser/check
      - golangci/install
      - golangci/lint
      - run: make .bin/go-acc
      - run: .bin/go-acc -o coverage.out ./... -- -failfast -timeout=20m -tags=sqlite,hsm
      #      Running race conditions requires parallel tests, otherwise it's worthless (which is the case)
      #      - run: go test -race -short $(go list ./... | grep -v cmd)
      - run: |
          bash <(curl -s https://codecov.io/bash)

  test-hsm:
    docker:
      - image: cimg/go:1.16-node
        environment:
          - HSM_ENABLED=true
          - HSM_LIBRARY=/usr/lib/softhsm/libsofthsm2.so
          - HSM_TOKEN_LABEL=hydra
          - HSM_PIN=1234
          - TEST_DATABASE_POSTGRESQL=postgres://test:test@localhost:5432/postgres?sslmode=disable
          - TEST_DATABASE_MYSQL=mysql://root:test@(localhost:3306)/mysql?multiStatements=true&parseTime=true
          - TEST_DATABASE_COCKROACHDB=cockroach://root@localhost:26257/defaultdb?sslmode=disable
      - image: postgres:9.6
        environment:
          - POSTGRES_USER=test
          - POSTGRES_PASSWORD=test
          - POSTGRES_DB=postgres
      - image: mysql:8.0
        environment:
          - MYSQL_ROOT_PASSWORD=test
      - image: cockroachdb/cockroach:v20.2.5
        command: start-single-node --insecure
    steps:
      - checkout
      - setup_remote_docker

      - go/load-cache:
          key: ory-hydra-go-mod-v1
      - go/mod-download
      - go/save-cache:
          key: ory-hydra-go-mod-v1

      - run: sudo apt update
      - run: sudo apt install -y softhsm opensc
      - run: sudo rm -rf /var/lib/softhsm/tokens; sudo mkdir -p /var/lib/softhsm/tokens; sudo chmod -R a+rwx /var/lib/softhsm; sudo chmod a+rx /etc/softhsm; sudo chmod a+r /etc/softhsm/*
      - run: pkcs11-tool --module /usr/lib/softhsm/libsofthsm2.so --slot 0 --init-token --so-pin 0000 --init-pin --pin 1234 --label hydra
      - run: go test -p 1 -v -failfast -short -timeout=20m -tags=sqlite,hsm ./...

  test-e2e:
    docker:
      - image: oryd/e2e-env:latest
        environment:
          - GO111MODULE=on
          - TEST_DATABASE_MYSQL=mysql://root:test@(localhost:3306)/mysql?parseTime=true&multiStatements=true
          - TEST_DATABASE_COCKROACHDB=cockroach://root@localhost:26257/defaultdb?sslmode=disable
          - TEST_DATABASE_POSTGRESQL=postgres://test:test@localhost:5432/postgres?sslmode=disable
      - image: postgres:9.6
        environment:
          - POSTGRES_USER=test
          - POSTGRES_PASSWORD=test
          - POSTGRES_DB=postgres
      - image: cockroachdb/cockroach:v20.2.6
        command: start-single-node --insecure
      - image: mysql:8.0
        environment:
          - MYSQL_ROOT_PASSWORD=test
    steps:
      - checkout

      # oauth2_client node_modules cache
      - restore_cache:
          keys:
            - v2-deps-{{ checksum "package-lock.json" }}-{{ checksum "test/e2e/oauth2-client/package-lock.json" }}
      - run: npm ci
      - run: cd test/e2e/oauth2-client; npm ci
      - save_cache:
          key: v2-deps-{{ checksum "package-lock.json" }}-{{ checksum "test/e2e/oauth2-client/package-lock.json" }}
          paths:
            - test/e2e/oauth2-client/node_modules
            - node_modules
            - ~/.cache # cypress

      - go/load-cache:
          key: ory-hydra-go-mod-v1
      - go/mod-download
      - go/save-cache:
          key: ory-hydra-go-mod-v1

      - run: ./test/e2e/circle-ci.bash memory
      - run: ./test/e2e/circle-ci.bash memory --jwt
      - run: ./test/e2e/circle-ci.bash cockroach
      - run: ./test/e2e/circle-ci.bash cockroach --jwt
      - run: ./test/e2e/circle-ci.bash mysql
      - run: ./test/e2e/circle-ci.bash mysql --jwt
      - run: ./test/e2e/circle-ci.bash postgres
      - run: ./test/e2e/circle-ci.bash postgres --jwt


workflows:
  bdt:
    jobs:

      # Test legacy migrations
#      - test-legacy-migrations:
#          name: test-legacy-migrations-postgres
#          flavor: postgres
#          filters:
#            tags:
#              only: /.*/
#      - test-legacy-migrations:
#          name: test-legacy-migrations-mysql
#          requires:
#            - test-legacy-migrations-postgres
#          flavor: mysql
#          filters:
#            tags:
#              only: /.*/
#      - test-legacy-migrations:
#          name: test-legacy-migrations-cockroach
#          requires:
#            - test-legacy-migrations-postgres
#          flavor: cockroach
#          filters:
#            tags:
#              only: /.*/
      # END - Test legacy migrations

      - test:
          filters:
            tags:
              only: /.*/
      - test-hsm:
          filters:
            tags:
              only: /.*/
      - test-e2e:
          filters:
            tags:
              only: /.*/
      - changelog/generate:
          requires:
            - test
            - test-hsm
            - test-e2e
            - docs/build
#            - test-legacy-migrations-mysql
#            - test-legacy-migrations-cockroach
          filters:
            tags:
              only: /.*/
            branches:
              only: master
      - sdk/generate:
          appname: Ory_Hydra
          swagpath: spec/api.json
          specignorepgks: internal/httpclient gopkg.in/square/go-jose.v2
          requires:
            - test
            - test-hsm
            - test-e2e
#            - test-legacy-migrations-mysql
#            - test-legacy-migrations-cockroach
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /master/
      - sdk/release:
          specignorepgks: internal/httpclient gopkg.in/square/go-jose.v2
          swagpath: spec/api.json
          requires:
            - test
            - test-hsm
            - sdk/generate
            - goreleaser/release
            - docs/build
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - docs/cli:
          requires:
            - test
      - docs/build:
          swag-spec-location: spec/api.json
          requires:
            - test
          filters:
            tags:
              only: /.*/
            branches:
               only: master
      ## goreleaser
      - goreleaser/release:
          requires:
            - test
            - test-hsm
            - test-e2e
            - changelog/generate
  #            - test-legacy-migrations-mysql
  #            - test-legacy-migrations-cockroach
            - docs/build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      -
        goreleaser/render-version-schema:
          schema-path: spec/config.json
          requires:
            - goreleaser/release
          filters:
            tags:
              only: /.*/
      -
        goreleaser/newsletter-draft:
          chimp-list: f605a41b53
          chimp-segment: 6479481
          requires:
            - goreleaser/release
          filters:
            tags:
              only: /.*/
      -
        slack/approval-notification:
          message: Pending approval
          channel: release-automation
          requires:
            - goreleaser/newsletter-draft
          filters:
            tags:
              only: /.*/
      -
        newsletter-approval:
          type: approval
          requires:
            - goreleaser/newsletter-draft
          filters:
            tags:
              only: /.*/
      -
        goreleaser/newsletter-send:
          chimp-list: f605a41b53
          requires:
            - newsletter-approval
          filters:
            tags:
              only: /.*/
      ## end goreleaser
